----------------------------------
--ALL01/ XEM DANH MỤC THUỐC
GO
CREATE OR ALTER PROC SP_GETALLTHUOC_NV_QTV_NS
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM LOAITHUOC
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
---------------------
--ALL03/ TRUY VẤN HỒ SƠ KHÁM BỆNH
GO
CREATE OR ALTER PROC SP_GETHSB1KH_NV_NS_KH
	@SODT VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM KHACHHANG WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Khách hàng này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		
		ELSE
		BEGIN
			SELECT HSB.SOTT, HSB.SODT SODT, KH.HOTEN HOTEN, DATEDIFF(year,KH.NGAYSINH,GETDATE()) TUOI, NGAYKHAM, NS.HOTEN NHASI, DANDO, CTDV.MADV, TENDV, CTDV.SOLUONG, CTT.MATHUOC, TENTHUOC, CTT.SOLUONG, DONVITINH, THOIDIEMDUNG
			FROM HOSOBENH HSB 
			JOIN NHASI NS ON HSB.MANS = NS.MANS
			JOIN KHACHHANG KH ON KH.SODT = HSB.SODT
			JOIN CHITIETDV CTDV ON CTDV.SOTT = HSB.SOTT AND CTDV.SODT = HSB.SODT
			JOIN LOAIDICHVU LDV ON LDV.MADV = CTDV.MADV
			LEFT JOIN CHITIETTHUOC CTT ON CTT.SOTT = HSB.SOTT AND CTT.SODT = HSB.SODT
			LEFT JOIN LOAITHUOC LT ON LT.MATHUOC = CTT.MATHUOC
			WHERE HSB.SODT = @SODT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-------------------------------------------------------
--ALL05/ TẠO LỊCH HẸN
GO
CREATE OR ALTER PROC SP_DATLICHHEN_NV_KH
	@SODT VARCHAR(100),
	@MANS VARCHAR(100),
	@SOTT INT,
	@LYDOKHAM VARCHAR(200)
AS
BEGIN TRAN
	BEGIN TRY
		BEGIN
			INSERT INTO LICHHEN(MANS, SODT, LYDOKHAM, SOTT) 
			VALUES(@MANS, @SODT, @LYDOKHAM, @SOTT)
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
----------------------------------
--ALL06/ HỦY LỊCH HẸN
GO
CREATE OR ALTER PROC SP_DELETELICHEN_NV_KH
	@MANS VARCHAR(100),
	@SODT VARCHAR(100),
	@SOTT INT
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM LICHHEN WHERE SODT = @SODT AND MANS = @MANS AND SOTT = @SOTT))
		BEGIN
			RAISERROR(N'Lịch hẹn này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		IF (EXISTS(SELECT * 
		FROM LICHHEN LH
		JOIN LICHRANH LR ON LH.MANS = LR.MANS AND LH.MANS = LR.MANS
		WHERE SODT = @SODT AND LH.MANS = @MANS AND LH.SOTT = @SOTT AND DATEDIFF(DAY,GETDATE(),NGAY) <= 1))
		BEGIN
			RAISERROR(N'Không thể hủy lịch hẹn trước 1 ngày', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			DELETE 
			FROM LICHHEN
			WHERE MANS = @MANS AND SOTT = @SOTT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL04/ ĐĂNG NHẬP
GO
CREATE OR ALTER FUNCTION FUNC_CHECKROLE
(
	@MATK VARCHAR(10)
)
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @Result VARCHAR(10);

	IF EXISTS (SELECT * FROM KHACHHANG WHERE SODT = @MATK)
	BEGIN
		SET @Result = 'KH';
	END
	ELSE IF EXISTS (SELECT * FROM NHASI WHERE MANS = @MATK)
	BEGIN
		SET @Result = 'NS';
	END
	ELSE IF EXISTS (SELECT * FROM NHANVIEN WHERE MANV = @MATK)
	BEGIN
		SET @Result = 'NV';
	END
	ELSE IF EXISTS (SELECT * FROM QTV WHERE MAQTV = @MATK)
	BEGIN
		SET @Result = 'QTV';
	END
	ELSE
	BEGIN
		SET @Result = 'NOTHING';
	END

	RETURN @Result;
END
GO


CREATE OR ALTER PROC SP_DANGNHAP_CHUNG
	@MATK VARCHAR(100),
	@MATKHAU VARCHAR(20)
AS
BEGIN TRAN
	BEGIN TRY
		DECLARE @ROLE VARCHAR(10);
		SET @ROLE = dbo.FUNC_CHECKROLE(@MATK);

		--Kiểm tra tài khoản đăng nhập có hợp lệ không
		IF (@ROLE = 'NOTHING')
		BEGIN
			PRINT N'Tải khoản ' + @MATK + N' hoặc mật khẩu không đúng.'
			ROLLBACK TRAN
			RETURN
		END

		IF (@ROLE = 'KH' AND 
			NOT EXISTS(SELECT * FROM KHACHHANG 
			WHERE SODT = @MATK AND MATKHAU = @MATKHAU))
		BEGIN
			PRINT N'Tải khoản ' + @MATK + N' hoặc mật khẩu không đúng.'
			ROLLBACK TRAN
			RETURN
		END
		ELSE IF (@ROLE = 'NS' AND 
			NOT EXISTS(SELECT * FROM NHASI 
			WHERE MANS = @MATK AND MATKHAU = @MATKHAU))
		BEGIN
			PRINT N'Tải khoản ' + @MATK + N' hoặc mật khẩu không đúng.'
			ROLLBACK TRAN
			RETURN
		END
		ELSE IF (@ROLE = 'NS' AND 
			NOT EXISTS(SELECT * FROM QTV 
			WHERE MAQTV = @MATK AND MATKHAU = @MATKHAU))
		BEGIN
			PRINT N'Tải khoản ' + @MATK + N' hoặc mật khẩu không đúng.'
			ROLLBACK TRAN
			RETURN
		END
		ELSE IF (@ROLE = 'QTV' AND 
			NOT EXISTS(SELECT * FROM NHANVIEN 
			WHERE MANV = @MATK AND MATKHAU = @MATKHAU))
		BEGIN
			PRINT N'Tải khoản ' + @MATK + N' hoặc mật khẩu không đúng.'
			ROLLBACK TRAN
			RETURN
		END
		
		ELSE
		BEGIN
			SELECT @ROLE
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL02/ XEM DANH SÁCH DỊCH VỤ
GO
CREATE OR ALTER PROC SP_XEM_DSDV_CHUNG
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM LOAIDICHVU
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL07/ XEM DANH SÁCH TẤT CẢ NHA SĨ
GO
CREATE OR ALTER PROC SP_XEM_DSNS_CHUNG
AS
BEGIN TRAN
	BEGIN TRY
		SELECT NS.MANS, NS.HOTEN, NS.PHAI, NS.GIOITHIEU
		FROM NHASI NS
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL02/ XEM THÔNG TIN TOÀN BỘ BẢNG CA
GO
CREATE OR ALTER PROC SP_XEM_CA_CHUNG
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM CA
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN