USE master;
GO

-- 21126090 - 21126054 - 21126072 - 21126088

-- MỤC LỤC

-- 1. TẠO CƠ SỞ DỮ LIỆU
-- 2. PHÂN QUYỀN
-- 3. TRIGGER
-- 4. NHẬP LIỆU


-- 1. TẠO CƠ SỞ DỮ LIỆU----------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = 'PKNHAKHOA')
BEGIN
    CREATE DATABASE PKNHAKHOA;
END
GO
USE PKNHAKHOA;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'KHACHHANG')
BEGIN
    CREATE TABLE KHACHHANG 
    (
        SODT VARCHAR(10) PRIMARY KEY,
        HOTEN NVARCHAR(50),
        PHAI NVARCHAR(5) CHECK(PHAI IN (N'Nam', N'Nữ')),
        NGAYSINH DATE,
        DIACHI NVARCHAR(250),
        MATKHAU VARCHAR(20),
        _DAKHOA BIT DEFAULT 0
    );
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'NHASI')
BEGIN
	CREATE TABLE NHASI 
	(
		MANS VARCHAR(10) PRIMARY KEY,
		HOTEN NVARCHAR(50),
		PHAI NVARCHAR(5) CHECK(PHAI IN (N'Nam', N'Nữ')),
		GIOITHIEU NVARCHAR(500),
		MATKHAU VARCHAR(20),
		_DAKHOA BIT DEFAULT 0
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'NHANVIEN')
BEGIN
	CREATE TABLE NHANVIEN 
	(
		MANV VARCHAR(10) PRIMARY KEY,
		HOTEN NVARCHAR(50),
		PHAI NVARCHAR(5) CHECK(PHAI IN (N'Nam', N'Nữ')),
		VITRICV NVARCHAR(50),
		MATKHAU VARCHAR(20),
		_DAKHOA BIT DEFAULT 0
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'QTV')
BEGIN
	CREATE TABLE QTV 
	(
		MAQTV VARCHAR(10) PRIMARY KEY,
		HOTEN NVARCHAR(50),
		PHAI NVARCHAR(5) CHECK(PHAI IN (N'Nam', N'Nữ')),
		MATKHAU VARCHAR(20),
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOAITHUOC')
BEGIN
	CREATE TABLE LOAITHUOC
	(
		MATHUOC VARCHAR(10) PRIMARY KEY,
		TENTHUOC NVARCHAR(50),
		DONVITINH NVARCHAR(20),
		CHIDINH NVARCHAR(200),
		SLTON INT CHECK (SLTON >= 0),
		SLNHAP INT CHECK (SLNHAP > 0),
		SLDAHUY INT CHECK (SLDAHUY >= 0),
		NGAYHETHAN DATE,
		DONGIA FLOAT CHECK (DONGIA > 0)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LOAIDICHVU')
BEGIN
	CREATE TABLE LOAIDICHVU
	(
		MADV VARCHAR(10) PRIMARY KEY,
		TENDV NVARCHAR(50),
		MOTA NVARCHAR(500),
		DONGIA FLOAT CHECK (DONGIA > 0)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CA')
BEGIN
	CREATE TABLE CA
	(
		MACA VARCHAR(10) PRIMARY KEY,
		GIOBATDAU TIME,
		GIOKETTHUC TIME
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CHITIETDV')
BEGIN
	CREATE TABLE CHITIETDV
	(
		MADV VARCHAR(10),
		SOTT INT,
		SODT VARCHAR(10),
		SOLUONG INT CHECK(SOLUONG > 0)
		PRIMARY KEY(SODT, SOTT, MADV)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CHITIETTHUOC')
BEGIN
	CREATE TABLE CHITIETTHUOC
	(
		MATHUOC VARCHAR(10),
		SOTT INT,
		SODT VARCHAR(10),
		SOLUONG INT CHECK (SOLUONG > 0),
		THOIDIEMDUNG NVARCHAR(200)
		PRIMARY KEY(SODT, SOTT, MATHUOC)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LICHRANH')
BEGIN
	CREATE TABLE LICHRANH
	(
		MANS VARCHAR(10),
		SOTT INT,
		MACA VARCHAR(10),
		NGAY DATE,
		PRIMARY KEY(MANS, SOTT)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'LICHHEN')
BEGIN
	CREATE TABLE LICHHEN
	(
		MANS VARCHAR(10),
		SOTT INT,
		LYDOKHAM NVARCHAR(200),
		SODT VARCHAR(10)
		PRIMARY KEY(MANS, SOTT, SODT)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'HOSOBENH')
BEGIN
	CREATE TABLE HOSOBENH
	(
		SODT VARCHAR(10),
		SOTT INT,
		NGAYKHAM DATE,
		DANDO NVARCHAR(200),
		MANS VARCHAR(10),
		_DAXUATHOADON BIT DEFAULT 0
		PRIMARY KEY(SODT, SOTT)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'HOADON')
BEGIN
	CREATE TABLE HOADON
	(
		SODT VARCHAR(10),
		SOTT INT,
		NGAYXUAT DATE,
		TONGCHIPHI FLOAT CHECK (TONGCHIPHI > 0),
		_DATHANHTOAN BIT DEFAULT 0,
		MANV VARCHAR(10)
		PRIMARY KEY(SODT, SOTT)
	);
END

--PK1 LICHRANH(MANS) --> NHASI(MANS)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_LR_NS')
BEGIN
    ALTER TABLE LICHRANH
    ADD CONSTRAINT FK_LR_NS
    FOREIGN KEY(MANS)
    REFERENCES NHASI(MANS);
END

--PK2 LICHRANH(MACA) --> CA(MACA)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_LR_CA')
BEGIN
    ALTER TABLE LICHRANH
    ADD CONSTRAINT FK_LR_CA
    FOREIGN KEY(MACA)
    REFERENCES CA(MACA);
END

--PK3 LICHHEN(MANS, SOTT) --> LICHRANH(MANS, SOTT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_LH_LR')
BEGIN
    ALTER TABLE LICHHEN
    ADD CONSTRAINT FK_LH_LR
    FOREIGN KEY(MANS, SOTT)
    REFERENCES LICHRANH(MANS, SOTT);
END

--PK4 LICHHEN(SODT) --> KHACHHANG(SODT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_LH_KH')
BEGIN
	ALTER TABLE LICHHEN
	ADD CONSTRAINT FK_LH_KH
	FOREIGN KEY(SODT)
	REFERENCES KHACHHANG(SODT);
END

-- PK5 HOSOBENH(MANS) --> NHASI(MANS)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_HSB_NS')
BEGIN
    ALTER TABLE HOSOBENH
    ADD CONSTRAINT FK_HSB_NS
    FOREIGN KEY(MANS)
    REFERENCES NHASI(MANS);
END

-- PK6 HOSOBENH(SODT) --> KHACHHANG(SODT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_HSB_KH')
BEGIN
    ALTER TABLE HOSOBENH
    ADD CONSTRAINT FK_HSB_KH
    FOREIGN KEY(SODT)
    REFERENCES KHACHHANG(SODT);
END

-- PK7 HOADON(SODT, SOTT) --> HOSOBENH(SODT, SOTT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_HD_HSB')
BEGIN
    ALTER TABLE HOADON
    ADD CONSTRAINT FK_HD_HSB
    FOREIGN KEY(SODT, SOTT)
    REFERENCES HOSOBENH(SODT, SOTT);
END

-- PK8 HOADON(MANV) --> NHANVIEN(MANV)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_HD_NV')
BEGIN
    ALTER TABLE HOADON
    ADD CONSTRAINT FK_HD_NV
    FOREIGN KEY(MANV)
    REFERENCES NHANVIEN(MANV);
END

-- PK9 CHITIETDV(MADV) --> LOAIDICHVU(MADV)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_CTDV_LDV')
BEGIN
    ALTER TABLE CHITIETDV
    ADD CONSTRAINT FK_CTDV_LDV
    FOREIGN KEY(MADV)
    REFERENCES LOAIDICHVU(MADV);
END

-- PK10 CHITIETDV(SODT, SOTT) --> HOSOBENH(SODT, SOTT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_CTDV_HSB')
BEGIN
    ALTER TABLE CHITIETDV
    ADD CONSTRAINT FK_CTDV_HSB
    FOREIGN KEY(SODT, SOTT)
    REFERENCES HOSOBENH(SODT, SOTT);
END

-- PK11 CHITIETTHUOC(MATHUOC) --> LOAITHUOC(MATHUOC)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_CTT_LT')
BEGIN
    ALTER TABLE CHITIETTHUOC
    ADD CONSTRAINT FK_CTT_LT
    FOREIGN KEY(MATHUOC)
    REFERENCES LOAITHUOC(MATHUOC);
END

-- PK12 CHITIETTHUOC(SODT, SOTT) --> HOSOBENH(SODT, SOTT)
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_CTT_HSB')
BEGIN
    ALTER TABLE CHITIETTHUOC
    ADD CONSTRAINT FK_CTT_HSB
    FOREIGN KEY(SODT, SOTT)
    REFERENCES HOSOBENH(SODT, SOTT);
END
-----------------------------------------------------------------------------------------------------------------

-- 2. PHÂN QUYỀN-------------------------------------------------------------------------------------------------
USE master;
GO

IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'loginKH')
BEGIN
    CREATE LOGIN loginKH WITH PASSWORD = 'password123@';
END

IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'loginNS')
BEGIN
    CREATE LOGIN loginNS WITH PASSWORD = 'password123@';
END

IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'loginNV')
BEGIN
    CREATE LOGIN loginNV WITH PASSWORD = 'password123@';
END

IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'loginQTV')
BEGIN
    CREATE LOGIN loginQTV WITH PASSWORD = 'password123@';
END

IF NOT EXISTS (SELECT name FROM sys.server_principals WHERE name = 'loginServer')
BEGIN
    CREATE LOGIN loginServer WITH PASSWORD = 'password123@';
END


USE PKNHAKHOA;
GO


IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'userKH')
BEGIN
    CREATE USER userKH FOR LOGIN loginKH;
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'userNS')
BEGIN
    CREATE USER userNS FOR LOGIN loginNS;
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'userNV')
BEGIN
    CREATE USER userNV FOR LOGIN loginNV;
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'userQTV')
BEGIN
    CREATE USER userQTV FOR LOGIN loginQTV;
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'userServer')
BEGIN
    CREATE USER userServer FOR LOGIN loginServer;
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'QTV')
BEGIN
    EXEC SP_ADDROLE 'QTV';
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'KHACHHANG')
BEGIN
    EXEC SP_ADDROLE 'KHACHHANG';
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'NHANVIEN')
BEGIN
    EXEC SP_ADDROLE 'NHANVIEN';
END

IF NOT EXISTS (SELECT name FROM sys.database_principals WHERE name = 'NHASI')
BEGIN
    EXEC SP_ADDROLE 'NHASI';
END

EXEC sp_addrolemember 'QTV', 'userQTV'
EXEC sp_addrolemember 'KHACHHANG', 'userKH'
EXEC sp_addrolemember 'NHANVIEN', 'userNV'
EXEC sp_addrolemember 'NHASI', 'userNS'
EXEC sp_addrolemember db_datareader, 'userServer'

USE PKNHAKHOA
GO
--I/ Phân quyền cho role QTV
--1. Quyền quản lý tài khoản KH
GRANT SELECT (SODT, HOTEN, PHAI, NGAYSINH, DIACHI, _DAKHOA), UPDATE (_DAKHOA)
ON KHACHHANG
TO QTV

--2. Quyền quản lý tài khoản NV
GRANT SELECT (MANV, HOTEN, PHAI, VITRICV, _DAKHOA), INSERT, UPDATE (_DAKHOA)
ON NHANVIEN
TO QTV

--3. Quyền quản lý tài khoản NS
GRANT SELECT (MANS, HOTEN, PHAI, GIOITHIEU, _DAKHOA), INSERT, UPDATE (_DAKHOA)
ON NHASI
TO QTV

--4. Quyền quản lý tài khoản QTV
GRANT SELECT, INSERT, UPDATE(HOTEN, PHAI, MATKHAU)
ON QTV
TO QTV

--5. Quyền quản lý dịch vụ 
GRANT SELECT, INSERT, DELETE, UPDATE(TENDV, MOTA, DONGIA)
ON LOAIDICHVU
TO QTV

--6. Quyền quản lý các loại thuốc
GRANT SELECT, INSERT, DELETE, UPDATE (TENTHUOC, DONVITINH, CHIDINH, SLTON, SLNHAP, SLDAHUY, NGAYHETHAN, DONGIA)
ON LOAITHUOC
TO QTV

--7. Quyền quản lý các ca
GRANT SELECT, INSERT, DELETE, UPDATE(GIOBATDAU, GIOKETTHUC)
ON CA
TO QTV

--II/ Phân quyền cho KHACHHANG 
--1. Mọi quyền trên tài khoản KH trừ xóa tài khoản
GRANT SELECT, INSERT, UPDATE(HOTEN, PHAI, NGAYSINH, DIACHI, MATKHAU)
ON KHACHHANG
TO KHACHHANG

--2. Quyền xem,thêm, xóa lịch hẹn
GRANT SELECT, DELETE, INSERT
ON LICHHEN
TO KHACHHANG

--3. Quyền xem trên lịch rảnh của nha sĩ
GRANT SELECT
ON LICHRANH
TO KHACHHANG

--4. Quyền xem trên CA
GRANT SELECT
ON CA
TO KHACHHANG

--5. Quyền xem thông tin nha sĩ
GRANT SELECT (MANS, HOTEN, PHAI, GIOITHIEU)
ON NHASI
TO KHACHHANG

--6. Quyền xem hồ sơ bệnh 
GRANT SELECT (SODT, SOTT, NGAYKHAM, DANDO, MANS)
ON HOSOBENH
TO KHACHHANG

--7. Quyền xem hóa đơn 
GRANT SELECT
ON HOADON
TO KHACHHANG

--8. Quyền xem tên nhân viên trong hóa đơn 
GRANT SELECT(MANV, HOTEN)
ON NHANVIEN
TO KHACHHANG

--9. Quyền xem chi tiết dịch vụ
GRANT SELECT
ON CHITIETDV
TO KHACHHANG

--10. Quyền xem loại dịch vụ
GRANT SELECT
ON LOAIDICHVU
TO KHACHHANG

--11. Quyền xem chi tiết nhân thuốc trong mỗi đơn thuốc
GRANT SELECT
ON CHITIETTHUOC
TO KHACHHANG

--12. Quyền xem tên các loại thuốc
GRANT SELECT (MATHUOC, TENTHUOC, DONVITINH, CHIDINH, DONGIA, NGAYHETHAN)
ON LOAITHUOC
TO KHACHHANG

--III/ Phân quyền cho role NHASI
--1. Quyền xem, sửa trên bảng nha sĩ.
GRANT SELECT, UPDATE (HOTEN, PHAI, GIOITHIEU, MATKHAU)
ON NHASI
TO NHASI

--2. Quyền quản lý lịch rảnh.
GRANT SELECT, INSERT, DELETE, UPDATE(MACA, NGAY)
ON LICHRANH
TO NHASI

--3. Quyền xem ca
GRANT SELECT
ON CA
TO NHASI

--4. Quyền xem lịch hẹn
GRANT SELECT
ON LICHHEN
TO NHASI

--5. Quyền xem, tạo hồ sơ bệnh án của bệnh nhân
GRANT SELECT, INSERT
ON HOSOBENH
TO NHASI

--6. Quyền xem và tạo chi tiết dịch vụ
GRANT SELECT, INSERT
ON CHITIETDV
TO NHASI

--7. Quyền xem loại dịch vụ
GRANT SELECT
ON LOAIDICHVU
TO NHASI

--8. Quyền xem và tạo chi tiết thuốc
GRANT SELECT, INSERT
ON CHITIETTHUOC
TO NHASI

--9. Quyền xem loại thuốc
GRANT SELECT
ON LOAITHUOC
TO NHASI

--10. Quyền xem thông tin khách hàng
GRANT SELECT(SODT, HOTEN, PHAI, NGAYSINH, DIACHI)
ON KHACHHANG
TO NHASI

--IV/ Phân quyền cho role NHANVIEN
--1. Quyền xem, sửa thông tin nhân viên
GRANT SELECT, UPDATE(HOTEN, PHAI)
ON NHANVIEN
TO NHANVIEN

--2. Quyền xem, tạo hóa đơn
GRANT SELECT, INSERT
ON HOADON
TO NHANVIEN

--3. Quyền xem hồ sơ bệnh án
GRANT SELECT
ON HOSOBENH
TO NHANVIEN

--4. Quyền xem trên chi tiết dịch vụ
GRANT SELECT
ON CHITIETDV
TO NHANVIEN

--5. Quyền xem trên loại dịch vụ
GRANT SELECT
ON LOAIDICHVU
TO NHANVIEN

--6. Quyền xem trên chi tiết thuốc
GRANT SELECT
ON CHITIETTHUOC
TO NHANVIEN

--7. Quyền xem các loại thuốc
GRANT SELECT
ON LOAITHUOC
TO NHANVIEN

--8. Quyền xem và tạo tài khoản khách hàng
GRANT SELECT(SODT, HOTEN, PHAI, NGAYSINH, _DAKHOA), INSERT 
ON KHACHHANG
TO NHANVIEN

--9. Quyền xem thông tin nha sĩ
GRANT SELECT(MANS, HOTEN, PHAI, GIOITHIEU, _DAKHOA) 
ON NHASI
TO NHANVIEN

--10. Quyền xem,thêm, xóa lịch hẹn
GRANT SELECT, DELETE, INSERT
ON LICHHEN
TO NHANVIEN

--11. Quyền xem trên lịch rảnh của nha sĩ
GRANT SELECT
ON LICHRANH
TO NHANVIEN

--12. Quyền xem trên CA
GRANT SELECT
ON CA
TO NHANVIEN

-------------------------------------------------------------------------------------------------------
-- 3. Trigger

-------------------------------------------------------------------------------------------------------

-- 4. NHẬP LIỆU