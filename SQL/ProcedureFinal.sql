USE PKNHAKHOA
GO 

-- 21126090 21126088 21126054 21126072

-- NOTE
-- ALL..: CHỨC NĂNG CHO NHIỀU ROLE
-- KH..: CHỨC NĂNG CHO ROLE KHÁCH HÀNG
-- NV..: CHỨC NĂNG CHO ROLE NHÂN VIÊN
-- NS..: CHỨC NĂNG CHO ROLE NHA SĨ
-- QTV..: CHỨC NĂNG CHO ROLE QUẢN TRỊ VIÊN


----------------------------------
--ALL01/ XEM DANH MỤC THUỐC
GO
CREATE OR ALTER PROC SP_GETALLTHUOC_NV_QTV_NS
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM LOAITHUOC
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
----------------------------------
--ALL02/ XEM DANH SÁCH DỊCH VỤ
GO
CREATE OR ALTER PROC SP_XEMDANHSACHDICHVU_ALL
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM LOAIDICHVU
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
---------------------
--ALL03/ TRUY VẤN HỒ SƠ KHÁM BỆNH
GO
CREATE OR ALTER PROC SP_GETHSB1KH_NV_NS_KH
	@SODT VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM KHACHHANG WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Khách hàng này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		
		ELSE
		BEGIN
			SELECT HSB.SOTT, HSB.SODT SODT, KH.HOTEN HOTEN, DATEDIFF(year,KH.NGAYSINH,GETDATE()) TUOI, NGAYKHAM, NS.HOTEN NHASI, DANDO, CTDV.MADV, TENDV, CTDV.SOLUONG, CTT.MATHUOC, TENTHUOC, CTT.SOLUONG, DONVITINH, THOIDIEMDUNG
			FROM HOSOBENH HSB 
			JOIN NHASI NS ON HSB.MANS = NS.MANS
			JOIN KHACHHANG KH ON KH.SODT = HSB.SODT
			JOIN CHITIETDV CTDV ON CTDV.SOTT = HSB.SOTT AND CTDV.SODT = HSB.SODT
			JOIN LOAIDICHVU LDV ON LDV.MADV = CTDV.MADV
			LEFT JOIN CHITIETTHUOC CTT ON CTT.SOTT = HSB.SOTT AND CTT.SODT = HSB.SODT
			LEFT JOIN LOAITHUOC LT ON LT.MATHUOC = CTT.MATHUOC
			WHERE HSB.SODT = @SODT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL04/ ĐĂNG NHẬP
GO
CREATE OR ALTER PROC SP_DANGNHAP_ALL
	@MATK VARCHAR(100),
	@MATKHAU VARCHAR(20)
AS
BEGIN TRAN
	BEGIN TRY
		IF LEN(@MATK) > 10
		BEGIN
			RAISERROR(N'Tài khoản đăng nhập không hợp lệ.', 16, 1);
			ROLLBACK TRAN
			RETURN
		END 

		DECLARE @ROLE VARCHAR(10);
		DECLARE @_ISLOCK BIT;
		SET @ROLE = NULL;
		SET @_ISLOCK = NULL;

		--Kiểm tra tài khoản đăng nhập có hợp lệ (tk mà mk đều đúng)
		IF EXISTS (SELECT * FROM KHACHHANG WHERE SODT = @MATK AND MATKHAU = @MATKHAU)
		BEGIN
			
			SELECT @ROLE = 'KH', @_ISLOCK = _DAKHOA
			FROM KHACHHANG 
			WHERE SODT = @MATK AND MATKHAU = @MATKHAU;
		END
		ELSE IF EXISTS (SELECT * FROM NHASI WHERE MANS = @MATK AND MATKHAU = @MATKHAU)
		BEGIN
			SELECT @ROLE = 'NS', @_ISLOCK = _DAKHOA
			FROM NHASI 
			WHERE MANS = @MATK AND MATKHAU = @MATKHAU;
		END
		ELSE IF EXISTS (SELECT * FROM NHANVIEN WHERE MANV = @MATK AND MATKHAU = @MATKHAU)
		BEGIN
			SELECT @ROLE = 'NV', @_ISLOCK = _DAKHOA
			FROM NHANVIEN 
			WHERE MANV = @MATK AND MATKHAU = @MATKHAU;
		END
		ELSE IF EXISTS (SELECT * FROM QTV WHERE MAQTV = @MATK AND MATKHAU = @MATKHAU)
		BEGIN
			SET @ROLE = 'QTV';
			SET @_ISLOCK = 0;
		END
		ELSE
		BEGIN
			RAISERROR(N'Tải khoản hoặc mật khẩu không đúng.', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF (@_ISLOCK = 1)
		BEGIN
			RAISERROR(N'Tải khoản đã bị khóa.', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			SELECT @ROLE AS ROLE
		END

	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-------------------------------------------------------
--ALL05/ TẠO LỊCH HẸN
GO
CREATE PROC SP_DATLICHHEN_NV_KH
	@SODT VARCHAR(100),
	@MANS VARCHAR(100),
	@SOTT INT,
	@LYDOKHAM NVARCHAR(200)
AS
BEGIN TRAN
	BEGIN TRY
		IF (EXISTS(SELECT * 
				   FROM LICHHEN
				   WHERE MANS = @MANS AND SOTT = @SOTT))
		BEGIN
			RAISERROR(N'Lỗi: Đã có khách hàng đặt lịch hẹn này.',16,1)
			ROLLBACK TRAN
			RETURN
		END

		IF (EXISTS(SELECT LH.*
				  FROM LICHHEN LH JOIN LICHRANH LR
 				  ON LH.MANS = LR.MANS AND LH.SOTT = LR.SOTT
				  WHERE EXISTS(SELECT *
			 	  			   FROM LICHRANH LR2
			 				   WHERE LR2.MANS != LH.MANS AND LR.NGAY = LR2.NGAY AND LR.MACA = LR2.MACA
			 				   AND LH.SODT = @SODT
			 				   AND LR2.SOTT = @SOTT
			 				   AND LR2.MANS = @MANS)))
		BEGIN
			RAISERROR(N'Lỗi: Các lịch hẹn của cùng một khách hàng không được trùng ca nhau.',16,1)
			ROLLBACK TRAN
			RETURN
		END

		ELSE
		BEGIN
			INSERT INTO LICHHEN(MANS, SODT, LYDOKHAM, SOTT) 
			VALUES(@MANS, @SODT, @LYDOKHAM, @SOTT)
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
----------------------------------
--ALL06/ HỦY LỊCH HẸN
GO
CREATE OR ALTER PROC SP_DELETELICHHEN_NV_KH
	@MANS VARCHAR(100),
	@SODT VARCHAR(100),
	@SOTT INT
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM LICHHEN WHERE SODT = @SODT AND MANS = @MANS AND SOTT = @SOTT))
		BEGIN
			RAISERROR(N'Lịch hẹn này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		IF (EXISTS(SELECT * 
		FROM LICHHEN LH
		JOIN LICHRANH LR ON LH.MANS = LR.MANS AND LH.MANS = LR.MANS
		WHERE SODT = @SODT AND LH.MANS = @MANS AND LH.SOTT = @SOTT AND DATEDIFF(DAY,GETDATE(),NGAY) <= 1))
		BEGIN
			RAISERROR(N'Không thể hủy lịch hẹn trước 1 ngày', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			DELETE 
			FROM LICHHEN
			WHERE MANS = @MANS AND SOTT = @SOTT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
----------------------------------
--ALL07/ XEM DANH SÁCH TẤT CẢ NHA SĨ CHƯA BỊ KHÓA TK
GO
CREATE OR ALTER PROC SP_XEMDANHSACHNHASI_ALL
AS
BEGIN TRAN
	BEGIN TRY
		SELECT NS.MANS, NS.HOTEN, NS.PHAI, NS.GIOITHIEU
		FROM NHASI NS
		WHERE NS._DAKHOA = 0
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

----------------------------------
--ALL02/ XEM THÔNG TIN TOÀN BỘ BẢNG CA
GO
CREATE OR ALTER PROC SP_XEMCA_ALL
AS
BEGIN TRAN
	BEGIN TRY
		SELECT * FROM CA
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
GO
--------------
--KH01/ Tạo tài khoản Khách Hàng (KH)
CREATE OR ALTER PROC SP_TAOTKKH_KH
	@SODT VARCHAR(100),
	@HOTEN NVARCHAR(50),
	@PHAI NVARCHAR(5),
	@NGAYSINH DATE,
	@DIACHI NVARCHAR(250),
	@MATKHAU VARCHAR(20)
AS
BEGIN TRAN
	BEGIN TRY
		IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SODT)
			OR EXISTS(SELECT 1 FROM QTV WHERE MAQTV = @SODT)
			OR EXISTS(SELECT 1 FROM NHANVIEN WHERE MANV = @SODT)
			OR EXISTS(SELECT 1 FROM NHASI WHERE MANS = @SODT)
		BEGIN
			RAISERROR(N'Tài khoản đã tồn tại trong hệ thống', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			INSERT INTO KHACHHANG(SODT, HOTEN, PHAI, NGAYSINH, DIACHI, MATKHAU) 
			VALUES(@SODT, @HOTEN, @PHAI, @NGAYSINH, @DIACHI, @MATKHAU)
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

--------------
--KH02/ Xem thông tin cá nhân khách hàng
GO
CREATE OR ALTER PROC SP_XEMTHONGTIN_KH
    @SODT VARCHAR(100)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SODT)
        BEGIN
            SELECT * FROM KHACHHANG WHERE SODT = @SODT
        END
        ELSE
        BEGIN
            RAISERROR(N'Tài khoản không tồn tại trong hệ thống', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN;
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
        THROW 51000, @errorMessage, 1;
        RETURN
    END CATCH
COMMIT TRAN

------------------------
-- KH03. Cập nhật thông tin cá nhân KH
GO
CREATE OR ALTER PROC SP_CAPNHATTHONGTIN_KH
@SODT VARCHAR(10),  
@HOTEN NVARCHAR(50),
@PHAI NVARCHAR(5),
@NGAYSINH DATE,
@DIACHI NVARCHAR(250), 
@MAT_KHAU_CU VARCHAR(20),
@MAT_KHAU_MOI VARCHAR(20)
AS
BEGIN TRAN
    BEGIN TRY
         SET NOCOUNT ON;
        -- Kiểm tra tồn tại tài khoản
        IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SODT)
        BEGIN
            -- Kiểm tra mật khẩu cũ
            IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SODT AND MATKHAU = @MAT_KHAU_CU)
            BEGIN
                -- Cập nhật thông tin khách hàng
                UPDATE KHACHHANG
                SET
                HOTEN = CASE WHEN @HOTEN IS NOT NULL THEN @HOTEN ELSE HOTEN END,
                PHAI = CASE WHEN @PHAI IS NOT NULL THEN @PHAI ELSE PHAI END,
                NGAYSINH = CASE WHEN @NGAYSINH IS NOT NULL THEN @NGAYSINH ELSE NGAYSINH END,  
                DIACHI = CASE WHEN @DIACHI IS NOT NULL THEN @DIACHI ELSE DIACHI END,
                MATKHAU = CASE WHEN @MAT_KHAU_MOI IS NOT NULL THEN @MAT_KHAU_MOI ELSE MATKHAU END
                WHERE SODT = @SODT;
            END
            ELSE
            BEGIN
                -- Nếu mật khẩu cũ không đúng, in ra thông báo lỗi
                RAISERROR(N'Sai mật khẩu cũ', 16, 1);
                ROLLBACK TRAN;
                RETURN;
            END
        END
        ELSE
        BEGIN
            -- Nếu tài khoản không tồn tại, in ra thông báo lỗi
            RAISERROR(N'Tài khoản không tồn tại trong hệ thống', 16, 1);
            ROLLBACK TRAN;
            RETURN;  
        END
    END TRY
    BEGIN CATCH
      DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE(); 
      THROW 51000, @errorMessage, 1;
      ROLLBACK TRAN;
      RETURN; 
    END CATCH
COMMIT TRAN

--KH04. Xem lịch rảnh của nha sĩ từ hiện tại đến hết 30 ngày sau
GO
CREATE OR ALTER PROC SP_LRCHUADATTATCANS_KH
AS
BEGIN TRAN
	BEGIN TRY
		SELECT LR.*
		FROM LICHRANH LR LEFT JOIN LICHHEN LH 
		ON (LR.MANS = LH.MANS AND LR.SOTT = LH.SOTT)
		WHERE LH.MANS IS NULL AND LH.SOTT IS NULL
		AND DATEDIFF(DAY, GETDATE(), LR.NGAY) <= 30
		ORDER BY NGAY 
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN


--KH05. Truy vấn loại thuốc
GO
CREATE OR ALTER PROC SP_TRUYVANLOAITHUOC_KH
    @MA_THUOC VARCHAR(10)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS(SELECT 1 FROM CHITIETTHUOC WHERE MATHUOC = @MA_THUOC)
        BEGIN
            SELECT LT.TENTHUOC,LT.DONVITINH,LT.CHIDINH,LT.DONGIA
            FROM CHITIETTHUOC CTT JOIN LOAITHUOC LT ON CTT.MATHUOC = LT.MATHUOC
            WHERE CTT.MATHUOC = @MA_THUOC
        END
        ELSE
        BEGIN
            RAISERROR('Khong tim thay thong tin thuoc',16,1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
        THROW 51000, @errorMessage, 1;
        RETURN
    END CATCH
COMMIT TRAN


-- KH06. Truy vấn loại dịch vụ
GO
CREATE OR ALTER PROC SP_TRUYDICHVU_KH
    @MA_MADV VARCHAR(10)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS(SELECT 1 FROM LOAIDICHVU WHERE MADV = @MA_MADV)
        BEGIN
            SELECT LDV.MADV, LDV.TENDV,LDV.MOTA,LDV.DONGIA
            FROM LOAIDICHVU LDV
            WHERE   LDV.MADV = @MA_MADV
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tồn tại mã dịch vụ này.', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
        THROW 51000, @errorMessage, 1;
        RETURN
    END CATCH
COMMIT TRAN


-- KH07. Truy vấn lịch hẹn
GO
CREATE OR ALTER PROC SP_TRUYVANLICHHEN_KH
    @SDT VARCHAR(10)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SDT)
        BEGIN
            SELECT NS.MANS , NS.HOTEN, LR.SOTT, C.GIOBATDAU, C.GIOKETTHUC,C.MACA,LH.LYDOKHAM
            FROM KHACHHANG KH JOIN LICHHEN LH ON KH.SODT = LH.SODT 
                            JOIN NHASI NS ON LH.MANS = NS.MANS 
                            JOIN LICHRANH LR ON LH.MANS = LR.MANS 
                            JOIN CA C ON LR.MACA = C.MACA
            WHERE KH.SODT = @SDT
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tồn tại mã khách hàng này.', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
        THROW 51000, @errorMessage, 1;
        RETURN
    END CATCH
COMMIT TRAN
GO

--------------------------
--NV01/ XEM LỊCH TRỰC TỪ NGÀY HIỆN TẠI ĐẾN 7 NGÀY KẾ CỦA NHA SĨ
GO
CREATE OR ALTER PROC SP_GETLICHRANHNS_NV
AS
BEGIN TRAN
	BEGIN TRY
		-- LICH CO HEN CUA NHA SI
		SELECT NGAY, CA.MACA, GIOBATDAU, GIOKETTHUC, LH.SOTT SOTTLH, LH.MANS, NS.HOTEN HOTENNS, KH.SODT SODTKH, KH.HOTEN HOTENKH, LH.LYDOKHAM LYDOKHAM
		FROM LICHHEN LH
		JOIN NHASI NS ON NS.MANS = LH.MANS
		JOIN LICHRANH LR2 ON LR2.MANS = LH.MANS AND LH.SOTT = LR2.SOTT
		JOIN CA ON CA.MACA = LR2.MACA
		JOIN KHACHHANG KH ON KH.SODT = LH.SODT
		WHERE DATEDIFF(DAY,GETDATE(), NGAY) <= 7
		ORDER BY NGAY 

		-- LICH CHUA CO HEN CUA NHA SI
		SELECT NGAY, CA.MACA, GIOBATDAU, GIOKETTHUC, LR.SOTT SOTTLR, LR.MANS, HOTEN HOTENNS
		FROM LICHRANH LR
		JOIN CA ON CA.MACA = LR.MACA
		JOIN NHASI NS ON NS.MANS = LR.MANS
		WHERE NOT EXISTS 
		(
			SELECT 1
			FROM LICHHEN LH
			WHERE LH.MANS = LR.MANS AND LH.SOTT = LR.SOTT
		)
		AND DATEDIFF(DAY,GETDATE(), NGAY) <= 7
		ORDER BY NGAY 
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
------------------------
--NV02/ TẠO TÀI KHOẢN KHÁCH HÀNG()
GO
CREATE OR ALTER PROC SP_TAOTKKH_NV
	@SODT VARCHAR(100),
	@HOTEN NVARCHAR(50),
	@PHAI NVARCHAR(5),
	@NGAYSINH DATE,
	@DIACHI NVARCHAR(250)
AS
BEGIN TRAN
	BEGIN TRY
		IF EXISTS(SELECT 1 FROM KHACHHANG WHERE SODT = @SODT)
			OR EXISTS(SELECT 1 FROM QTV WHERE MAQTV = @SODT)
			OR EXISTS(SELECT 1 FROM NHANVIEN WHERE MANV = @SODT)
			OR EXISTS(SELECT 1 FROM NHASI WHERE MANS = @SODT)
		BEGIN
			RAISERROR(N'Tài khoản đã tồn tại trong hệ thống', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			DECLARE @MATKHAU VARCHAR(100);
			SET @MATKHAU = FORMAT(@NGAYSINH, 'ddMMyyyy');
			INSERT INTO KHACHHANG(SODT, HOTEN, PHAI, NGAYSINH, DIACHI, MATKHAU) 
			VALUES(@SODT, @HOTEN, @PHAI, @NGAYSINH, @DIACHI, @MATKHAU)
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
---------------------------
--NV03/ TẠO HÓA ĐƠN
GO
CREATE OR ALTER PROC SP_TAOHOADON_NV
	@SODT VARCHAR(100),
	@SOTT INT,
	@MANV VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		IF EXISTS(SELECT 1 FROM HOSOBENH WHERE SODT = @SODT AND SOTT = @SODT)
		BEGIN
			RAISERROR(N'Hồ sơ bệnh không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF EXISTS(SELECT 1 FROM HOSOBENH WHERE SODT = @SODT AND SOTT = @SODT AND _DAXUATHOADON = 1)
		BEGIN
			RAISERROR(N'Hồ sơ bệnh đã được xuất hóa đơn', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF NOT EXISTS(SELECT 1 FROM CHITIETDV WHERE SODT = @SODT AND SOTT = @SOTT)
		BEGIN
			RAISERROR(N'Hồ sơ bệnh chưa được thêm dịch vụ vào', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE

		BEGIN
			DECLARE @TONGCHIPHI FLOAT;
			DECLARE @TIENDV FLOAT
			DECLARE @TIENTHUOC FLOAT;

			SELECT @TIENTHUOC = ISNULL(SUM(DONGIALUCTHEM * SOLUONG), 0)
			FROM CHITIETTHUOC CTT
			WHERE CTT.SODT = @SODT AND CTT.SOTT = @SOTT;

			SELECT @TIENDV = ISNULL(SUM(DONGIALUCTHEM * SOLUONG), 0)
			FROM CHITIETDV CTDV
			WHERE CTDV.SODT = @SODT AND CTDV.SOTT = @SOTT;
			
			SET @TONGCHIPHI = @TIENTHUOC + @TIENDV

			INSERT INTO HOADON(SODT, SOTT, NGAYXUAT, TONGCHIPHI, _DATHANHTOAN, MANV)
			VALUES(@SODT, @SOTT, GETDATE(), @TONGCHIPHI, 0, @MANV)

			UPDATE HOSOBENH 
			SET _DAXUATHOADON = 1
			WHERE SOTT = @SOTT AND SODT = @SODT

			SELECT KH.HOTEN HOTENKH, HD.SODT SODT, HD.SOTT SOTTHD, NGAYXUAT, TONGCHIPHI, NV.MANV MANV, NV.HOTEN HOTENNV, _DATHANHTOAN, CTDV.MADV, TENDV, CTDV.SOLUONG, CTDV.DONGIALUCTHEM, CTT.MATHUOC, TENTHUOC, CTT.SOLUONG, CTT.DONGIALUCTHEM
			FROM HOADON HD
			JOIN KHACHHANG KH ON HD.SODT = KH.SODT
			JOIN NHANVIEN NV ON NV.MANV = HD.MANV
			JOIN CHITIETDV CTDV ON CTDV.SODT = HD.SODT AND CTDV.SOTT = HD.SOTT
			JOIN LOAIDICHVU LDV ON LDV.MADV = CTDV.MADV
			LEFT JOIN CHITIETTHUOC CTT ON CTT.SODT = HD.SODT AND CTT.SOTT = HD.SOTT
			LEFT JOIN LOAITHUOC	LT ON LT.MATHUOC = CTT.MATHUOC
			WHERE HD.SOTT = @SOTT AND HD.SODT = @SODT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
---------------
--NV04/ XÁC NHẬN THANH TOÁN HÓA ĐƠN
GO
CREATE OR ALTER PROC SP_THANHTOANHOADON_NV
	@SODT VARCHAR(100),
	@SOTT INT
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM HOADON WHERE SODT = @SODT AND SOTT = @SOTT))
		BEGIN
			RAISERROR(N'Hoá đơn này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF (EXISTS(SELECT * FROM HOADON WHERE SODT = @SODT AND SOTT = @SOTT AND _DATHANHTOAN = 1))
		BEGIN
			RAISERROR(N'Hoá đơn này đã được thanh toán', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		
		ELSE
		BEGIN
			UPDATE HOADON
			SET	_DATHANHTOAN = 1
			WHERE SODT = @SODT AND SOTT = @SOTT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-------------------------------------------
--NV05/ TRUY VẤN HÓA ĐƠN
GO
CREATE OR ALTER PROC SP_GETHOADON1KH_NV
	@SODT VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM KHACHHANG WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Tài khoản này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		
		IF (NOT EXISTS(SELECT * FROM HOADON WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Tài khoản không có hóa đơn nào', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		ELSE
		BEGIN
			SELECT KH.HOTEN, HD.SODT SODT, HD.SOTT ,NGAYXUAT, TONGCHIPHI, NV.HOTEN NVXUATHD, LDV.MADV, CTDV.SOLUONG, CTDV.DONGIALUCTHEM, CTT.MATHUOC,TENTHUOC, CTT.SOLUONG, CTT.DONGIALUCTHEM
			FROM HOADON HD
			JOIN KHACHHANG KH ON HD.SODT = KH.SODT
			JOIN NHANVIEN NV ON NV.MANV = HD.MANV
			JOIN CHITIETDV CTDV ON CTDV.SODT = HD.SODT AND CTDV.SOTT = HD.SOTT
			JOIN LOAIDICHVU LDV ON LDV.MADV = CTDV.MADV
			LEFT JOIN CHITIETTHUOC CTT ON CTT.SODT = HD.SODT AND CTT.SOTT = HD.SOTT
			LEFT JOIN LOAITHUOC	LT ON LT.MATHUOC = CTT.MATHUOC
			WHERE HD.SODT = @SODT
			ORDER BY HD.SOTT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-------------------------------------------
--NV05/ TRUY VẤN HÓA ĐƠN
GO
CREATE OR ALTER PROC SP_GETHOADON1KH_NV
	@SODT VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM KHACHHANG WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Tài khoản này không tồn tại', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		
		IF (NOT EXISTS(SELECT * FROM HOADON WHERE SODT = @SODT))
		BEGIN
			RAISERROR(N'Tài khoản không có hóa đơn nào', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		ELSE
		BEGIN
			SELECT KH.HOTEN, HD.SODT SODT, HD.SOTT ,NGAYXUAT, TONGCHIPHI, NV.HOTEN NVXUATHD, LDV.MADV, CTDV.SOLUONG, CTDV.DONGIALUCTHEM, CTT.MATHUOC,TENTHUOC, CTT.SOLUONG, CTT.DONGIALUCTHEM
			FROM HOADON HD
			JOIN KHACHHANG KH ON HD.SODT = KH.SODT
			JOIN NHANVIEN NV ON NV.MANV = HD.MANV
			JOIN CHITIETDV CTDV ON CTDV.SODT = HD.SODT AND CTDV.SOTT = HD.SOTT
			JOIN LOAIDICHVU LDV ON LDV.MADV = CTDV.MADV
			LEFT JOIN CHITIETTHUOC CTT ON CTT.SODT = HD.SODT AND CTT.SOTT = HD.SOTT
			LEFT JOIN LOAITHUOC	LT ON LT.MATHUOC = CTT.MATHUOC
			WHERE HD.SODT = @SODT
			ORDER BY HD.SOTT
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
---------------------------------
---NV06/ Đổi mật khẩu tài khoản nhân viên
GO
CREATE OR ALTER PROC SP_DOIMK_NV
	@MANV VARCHAR(100),
	@MATKHAUCU VARCHAR(100),
	@MATKHAUMOI VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		-- Kiểm tra tồn tại tài khoản
		IF (NOT EXISTS(SELECT * FROM NHANVIEN WHERE MANV = @MANV))
		BEGIN
			RAISERROR(N'Không tồn tại nhân viên này', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF NOT EXISTS(SELECT 1 FROM NHANVIEN WHERE MANV = @MANV AND MATKHAU = @MATKHAUCU)
		BEGIN 
			RAISERROR(N'Xác nhận mật khẩu sai', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			UPDATE NHANVIEN
			SET	MATKHAU = @MATKHAUMOI
			WHERE MANV = @MANV
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
GO

--QTV01/ THÊM LOẠI THUỐC MỚI
CREATE PROCEDURE SP_THEMLOAITHUOC_QTV
    @TENTHUOC NVARCHAR(100),
    @DONVITINH NVARCHAR(50),
    @CHIDINH NVARCHAR(500),
    @SLNHAP INT,
    @NGAYHETHAN DATE,
    @DONGIA FLOAT
AS
BEGIN TRAN
BEGIN TRY 
BEGIN
    IF @SLNHAP < 1 OR @DONGIA < 1
    BEGIN
        RAISERROR(N'Số lượng nhập và đơn giá không được nhỏ hơn hoặc bằng 0', 16, 1)
        ROLLBACK TRAN
        RETURN
    END

    DECLARE @NewMATHUOC VARCHAR(10);

    SELECT @NewMATHUOC = COALESCE(MAX(MATHUOC), 'MT01')
    FROM LOAITHUOC;
    SET @NewMATHUOC = 'MT' + RIGHT('00' + CAST(CAST(RIGHT(@NewMATHUOC, 2) AS INT) + 1 AS VARCHAR(2)), 2);
    INSERT INTO LOAITHUOC
        (MATHUOC, TENTHUOC, DONVITINH, CHIDINH, SLTON, SLNHAP, SLDAHUY, NGAYHETHAN, DONGIA)
    VALUES
        (@NewMATHUOC, @TENTHUOC, @DONVITINH, @CHIDINH, @SLNHAP, @SLNHAP, 0, @NGAYHETHAN, @DONGIA);
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- QTV02/ HỦY LOẠI THUỐC
CREATE PROCEDURE SP_HUYTHUOC_QTV
    @MATHUOC VARCHAR(10)
AS
BEGIN TRAN
BEGIN TRY 
BEGIN
    DECLARE @NGAYHETHAN DATE;

    SELECT @NGAYHETHAN = NGAYHETHAN
    FROM LOAITHUOC
    WHERE MATHUOC = @MATHUOC;

    IF @NGAYHETHAN < GETDATE()
    BEGIN

        UPDATE LOAITHUOC
        SET SLDAHUY = SLDAHUY + SLTON, SLTON = 0
        WHERE MATHUOC = @MATHUOC;
    END
    ELSE
    BEGIN
        RAISERROR(N'Không thể hủy thuốc vì chưa hết hạn.',16,1);
        ROLLBACK TRAN
        RETURN
    END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- QTV03/ CẬP NHẬT THUỐC
CREATE PROCEDURE SP_CAPNHATLOAITHUOC_QTV
    @MATHUOC VARCHAR(10),
    @TENTHUOC NVARCHAR(50) = NULL,
    @CHIDINH NVARCHAR(500) = NULL,
    @DONGIA FLOAT = NULL
AS
BEGIN TRAN
BEGIN TRY 
BEGIN
    IF  @DONGIA <= 0
    BEGIN
        RAISERROR(N'Đơn giá không được nhỏ hơn hoặc bằng 0', 16, 1)
        ROLLBACK TRAN
        RETURN
    END

    IF @TENTHUOC IS NOT NULL OR @CHIDINH IS NOT NULL OR @DONGIA IS NOT NULL
    BEGIN
        UPDATE LOAITHUOC
        SET 
            TENTHUOC = ISNULL(@TENTHUOC,TENTHUOC),
            CHIDINH = ISNULL(@CHIDINH, CHIDINH),
            DONGIA = ISNULL(@DONGIA, DONGIA)
        WHERE MATHUOC = @MATHUOC;
    END
    ELSE
    BEGIN
        RAISERROR(N'Không có thông tin mới để cập nhật.',16,1);
    END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- QTV04/ NHẬP THUỐC
CREATE PROCEDURE SP_NHAPTHEMTHUOC_QTV
    @MATHUOC VARCHAR(10),
    @SOLUONGNHAP INT,
    @NGAYHETHAN DATE
AS
BEGIN TRAN
BEGIN TRY 
BEGIN
    SET NOCOUNT ON;
    IF @SOLUONGNHAP < 1
    BEGIN
        RAISERROR(N'Số lượng nhập không được nhỏ hơn hoặc bằng 0', 16, 1)
        ROLLBACK TRAN
        RETURN
    END


    DECLARE @SLTON_OLD INT, @SLTON_NEW INT, @SLNHAP_OLD INT, @SLNHAP_NEW INT, @NGAYHETHAN_OLD DATE;

    SELECT @SLTON_OLD = ISNULL(SLTON, 0), @NGAYHETHAN_OLD = NGAYHETHAN, @SLNHAP_OLD = SLNHAP
    FROM LOAITHUOC
    WHERE MATHUOC = @MATHUOC;


    IF @SLTON_OLD = 0
    BEGIN
        SET @SLTON_NEW = @SOLUONGNHAP;
        SET @SLNHAP_NEW = @SLNHAP_OLD + @SOLUONGNHAP;

        UPDATE LOAITHUOC
        SET SLTON = @SLTON_NEW, SLNHAP = @SLNHAP_NEW, NGAYHETHAN = @NGAYHETHAN
        WHERE MATHUOC = @MATHUOC;

    END
    ELSE IF @NGAYHETHAN_OLD <= GETDATE() 
    BEGIN
        SET @SLTON_NEW = @SOLUONGNHAP;
        SET @SLNHAP_NEW = @SLNHAP_OLD + @SOLUONGNHAP;

        UPDATE LOAITHUOC
        SET SLTON = @SLTON_NEW, SLNHAP = @SLNHAP_NEW, NGAYHETHAN = @NGAYHETHAN, SLDAHUY = SLDAHUY + @SLTON_OLD
        WHERE MATHUOC = @MATHUOC;
    END
    ELSE
    BEGIN
        RAISERROR(N'Ngày hết hạn không hợp lệ hoặc thuốc đã hết hạn.',16,1);
        ROLLBACK TRAN
        RETURN
    END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- QTV05/ THÊM DV
CREATE PROCEDURE SP_THEMDICHVU_QTV
    @TENDV NVARCHAR(100),
    @CHITIET NVARCHAR(500),
    @DONGIA FLOAT
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    SET NOCOUNT ON;
    IF @DONGIA <= 0
    BEGIN
        RAISERROR(N'đơn giá không được nhỏ hơn hoặc bằng 0', 16, 1)
        ROLLBACK TRAN
        RETURN
    END

    DECLARE @NewMADV VARCHAR(10);

    SELECT @NewMADV = COALESCE(MAX(MADV), 'DV01')
    FROM LOAIDICHVU;
    SET @NewMADV = 'DV' + RIGHT('00' + CAST(CAST(RIGHT(@NewMADV, 2) AS INT) + 1 AS VARCHAR(2)), 2);

    INSERT INTO LOAIDICHVU
        (MADV, TENDV, MOTA, DONGIA)
    VALUES
        (@NewMADV, @TENDV, @CHITIET, @DONGIA);
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- QTV06/ CẬP NHẬT DV
CREATE PROCEDURE SP_CAPNHATDICHVU_QTV
    @MADV VARCHAR(10),
    @TENDV NVARCHAR(100) = NULL,
    @CHITIET NVARCHAR(500) = NULL,
    @DONGIA INT = NULL
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    IF @DONGIA <= 0
    BEGIN
        RAISERROR(N'đơn giá không được nhỏ hơn hoặc bằng 0', 16, 1)
        ROLLBACK TRAN
        RETURN
    END
    IF @TENDV IS NOT NULL OR @CHITIET IS NOT NULL OR @DONGIA IS NOT NULL
    BEGIN
        UPDATE LOAIDICHVU
        SET TENDV = ISNULL(@TENDV, TENDV),
            MOTA = ISNULL(@CHITIET, MOTA),
            DONGIA = ISNULL(@DONGIA, DONGIA)
        WHERE MADV = @MADV;
    END
    ELSE
    BEGIN
        RAISERROR(N'Không có thông tin nào được cập nhật.',16,1);
    END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- QTV07/ XEM DS NHÂN VIÊN
CREATE PROCEDURE SP_XEMDANHSACHNHANVIEN
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    SET NOCOUNT ON;

    SELECT MANV, HOTEN, PHAI, VITRICV, _DAKHOA
    FROM NHANVIEN;
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO


-------------------------
--QTV08/ TẠO NHÂN VIÊN MỚI
GO
CREATE OR ALTER PROC SP_CREATENV_QTV
    @HOTEN NVARCHAR(50),
    @PHAI NVARCHAR(100),
    @VITRICV NVARCHAR(200)
AS
BEGIN TRAN
    BEGIN TRY
        DECLARE @MANV NVARCHAR(10);
        -- Lấy giá trị MANV lớn nhất hiện tại
		SELECT @MANV = COALESCE(MAX(MANV), 'NV0001') 
		FROM NHANVIEN
        SET @MANV = 'NV' + RIGHT('0000' + CAST(CAST(RIGHT(@MANV, 4) AS INT) + 1 AS VARCHAR(4)), 4);

        INSERT INTO NHANVIEN
            (MANV, HOTEN, PHAI, VITRICV, MATKHAU, _DAKHOA)
        VALUES(@MANV, @HOTEN, @PHAI, @VITRICV, @MANV, 0)

    END TRY
    BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN

--------------------------
--QTV09/ CẬP NHÂT THÔNG TIN NHÂN VIÊN
GO
CREATE OR ALTER PROC SP_UPDATENV_QTV
    @MANV VARCHAR(100),
    @VITRICV NVARCHAR(200)
AS
BEGIN TRAN
    BEGIN TRY
		IF (NOT EXISTS(SELECT *
            FROM NHANVIEN
            WHERE MANV = @MANV))
		BEGIN
            RAISERROR(N'Không tồn tại nhân viên trên', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
		ELSE
		BEGIN
            UPDATE NHANVIEN
			SET VITRICV = @VITRICV
			WHERE MANV = @MANV
        END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-------------
--QTV10/ KHÓA TÀI KHOẢN NHÂN VIÊN
GO
CREATE OR ALTER PROC SP_BLOCKNV_QTV
    @MANV VARCHAR(100)
AS
BEGIN TRAN
    BEGIN TRY
		IF (NOT EXISTS(SELECT *
            FROM NHANVIEN
            WHERE MANV = @MANV))
		BEGIN
            RAISERROR(N'Không tồn tại nhân viên trên', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
		ELSE
		BEGIN
            UPDATE NHANVIEN
			SET _DAKHOA = 1
			WHERE MANV = @MANV
        END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
--------------------------
--QTV11/ MỞ KHÓA TK NHÂN VIÊN
GO
CREATE OR ALTER PROC SP_UNBLOCKNV_QTV
    @MANV VARCHAR(100)
AS
BEGIN TRAN
BEGIN TRY
		IF (NOT EXISTS(SELECT *
            FROM NHANVIEN
            WHERE MANV = @MANV))
		BEGIN
            RAISERROR(N'Không tồn tại nhân viên trên', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
		ELSE
		BEGIN
            UPDATE NHANVIEN
			SET _DAKHOA = 0
			WHERE MANV = @MANV
        END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
-----------
--QTV12/ XEM DANH SÁCH NHA SĨ
GO
CREATE OR ALTER PROC SP_GETALLNS_QTV
AS
BEGIN TRAN
    BEGIN TRY
		SELECT MANS, HOTEN, PHAI, GIOITHIEU, _DAKHOA
        FROM NHASI
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
--------------
-----------
--QTV13/ TẠO NHA SĨ MỚI
GO
CREATE OR ALTER PROC SP_CREATENS_QTV
    @HOTEN NVARCHAR(50),
    @PHAI NVARCHAR(100),
    @GIOITHIEU NVARCHAR(500)
AS
BEGIN TRAN
    BEGIN TRY
        DECLARE @MANS NVARCHAR(10);
        -- Lấy giá trị MANS lớn nhất hiện tại
		SELECT @MANS = COALESCE(MAX(MANS), 'NS0001') 
		FROM NHASI
        SET @MANS = 'NS' + RIGHT('0000' + CAST(CAST(RIGHT(@MANS, 4) AS INT) + 1 AS VARCHAR(4)), 4);

        INSERT INTO NHASI
            (MANS, HOTEN, PHAI, GIOITHIEU, MATKHAU, _DAKHOA)
        VALUES(@MANS, @HOTEN, @PHAI, @GIOITHIEU, @MANS, 0)

	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN


--QTV14/ CẬP NHẬT THÔNG TIN NHA SĨ
GO
CREATE OR ALTER PROC SP_UPDATENV_QTV
    @MANS VARCHAR(100),
    @GIOITHIEU NVARCHAR(200)
AS
BEGIN TRAN
    BEGIN TRY
		IF (NOT EXISTS(SELECT *
            FROM NHASI
            WHERE MANS = @MANS))
		BEGIN
            RAISERROR(N'Không tồn tại nha sĩ trên', 16, 1);
            ROLLBACK TRAN
            RETURN
        END
		ELSE
		BEGIN
            UPDATE NHASI
			SET GIOITHIEU = @GIOITHIEU
			WHERE MANS = @MANS
        END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN


--QTV15/ Khóa tài khoản nha sĩ
GO
CREATE OR ALTER PROC SP_KHOA_TAI_KHOAN_NHA_SI
    @MA_NS VARCHAR(10)
AS

BEGIN TRAN
BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM NHASI
                    WHERE MANS = @MA_NS)
        BEGIN
            UPDATE NHASI
            SET _DAKHOA = 1
            WHERE MANS = @MA_NS
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tồn tại mã nha sĩ này', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY

    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN





--QTV16. Mở tài khoản nha sĩ
GO
CREATE OR ALTER PROC SP_MO_TAI_KHOAN_NHA_SI
    @MA_NS VARCHAR(10)
AS

BEGIN TRAN
    BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM NHASI
                    WHERE MANS = @MA_NS)
        BEGIN
            UPDATE NHASI
            SET _DAKHOA = 0
            WHERE MANS = @MA_NS
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tồn tại mã nha sĩ này', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN

--QTV17/ Xem danh sách QTV
-- XEM HET TAT CA CAC THUOC TINH CUA QTV TRU MAT KHAU

GO
CREATE OR ALTER PROC SP_XEM_DANH_SACH_QTV
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM QTV)
        BEGIN
            SELECT QTV.MAQTV, QTV.HOTEN, QTV.PHAI
            FROM QTV
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tồn tại quản trị viên nào', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY

    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN


--QTV18/ Tạo Quản trị viên mới
GO
CREATE OR ALTER PROC SP_TAO_QTV_MOI
    @HOTEN VARCHAR(50),
    @PHAI NVARCHAR(5)
AS
BEGIN TRAN
    BEGIN TRY
        DECLARE @MAQTV NVARCHAR(10);
        -- Lấy giá trị MAQTV lớn nhất hiện tại
		SELECT @MAQTV = COALESCE(MAX(MAQTV), 'QTV0001') 
		FROM QTV
        SET @MAQTV = 'QTV' + RIGHT('0000' + CAST(CAST(RIGHT(@MAQTV, 4) AS INT) + 1 AS VARCHAR(4)), 4);

        INSERT INTO QTV (MAQTV, HOTEN, PHAI, MATKHAU)
        VALUES(@MAQTV, @HOTEN, @PHAI, @MAQTV)
    END TRY
    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN


--QTV19. Xem danh sách khách hàng 
GO
CREATE OR ALTER PROC SP_XEM_DANH_SACH_KHACH_HANG

AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM KHACHHANG)
        BEGIN
            SELECT KH.SODT, KH.HOTEN, KH.PHAI, KH.NGAYSINH, KH.DIACHI, KH._DAKHOA
            FROM KHACHHANG KH
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tìm thấy danh sách khách hàng nào', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY

    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN

--QTV20. Khóa Tài khoản khách hàng
GO
CREATE OR ALTER PROC SP_KHOA_TAI_KHOAN_KHACH_HANG
    @SODT VARCHAR(20)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM KHACHHANG
                    WHERE SODT = @SODT)
        BEGIN
            UPDATE KHACHHANG
            SET _DAKHOA = 1
            WHERE SODT = @SODT
        END
        ELSE
        BEGIN
            RAISERROR(N'Không tìm thấy khách hàng nào', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY

    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN


--QTV21. Mở tài khoản khách hàng
GO
CREATE OR ALTER PROC SP_MO_TAI_KHOAN_KHACH_HANG
    @SODT VARCHAR(20)
AS
BEGIN TRAN
    BEGIN TRY
        IF EXISTS (SELECT 1
                    FROM KHACHHANG
                    WHERE SODT = @SODT)
        BEGIN
            UPDATE KHACHHANG
            SET _DAKHOA = 0
            WHERE SODT = @SODT
        END
        ELSE
        BEGIN
            RAISERROR(N'Không thể mở tài khoản khách hàng này', 16, 1)
            ROLLBACK TRAN
            RETURN
        END
    END TRY

    BEGIN CATCH
        ROLLBACK TRAN
        DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
    END CATCH
COMMIT TRAN
---------------------------------
--QTV22/Đổi mật khẩu tài khoản QTV
GO
CREATE OR ALTER PROC SP_DOIMK_QTV
	@MAQTV VARCHAR(100),
	@MATKHAUCU VARCHAR(100),
	@MATKHAUMOI VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		-- Kiểm tra tồn tại tài khoản
		IF (NOT EXISTS(SELECT * FROM QTV WHERE MAQTV = @MAQTV))
		BEGIN
			RAISERROR(N'Không tồn tại quản trị viên này', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF NOT EXISTS(SELECT 1 FROM QTV WHERE MAQTV = @MAQTV AND MATKHAU = @MATKHAUCU)
		BEGIN 
			RAISERROR(N'Xác nhận mật khẩu sai', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			UPDATE QTV
			SET	MATKHAU = @MATKHAUMOI
			WHERE MAQTV = @MAQTV
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
GO
-- NS01/ XEM CÁC CA ĐỦ 2 NG TRỰC TRỪ CA MÌNH ĐÃ ĐẶT (TỪ NGÀY HIỆN TẠI ĐẾN 30 NGÀY SAU)
CREATE PROCEDURE SP_XEMCADU2NGTRUC_NS
    @MANS VARCHAR(10)
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    SET NOCOUNT ON;

    SELECT L1.MACA, L1.NGAY, C.GIOBATDAU, C.GIOKETTHUC
    FROM LICHRANH L1
        JOIN LICHRANH L2 ON L1.MACA = L2.MACA AND L1.NGAY = L2.NGAY AND L1.SOTT <> L2.SOTT
        JOIN CA C ON L1.MACA = C.MACA
    WHERE L1.MANS = @MANS
        AND L1.NGAY BETWEEN GETDATE() AND DATEADD(DAY, 30, GETDATE())
    GROUP BY L1.MACA, L1.NGAY, C.GIOBATDAU, C.GIOKETTHUC
    HAVING COUNT(DISTINCT L1.SOTT) = 2
END
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- NS02/ TRUY VẤN CÁC LỊCH HẸN CỦA MÌNH (TỪ NGÀY HIỆN TẠI ĐẾN 30 NGÀY SAU)
CREATE PROCEDURE SP_XEMLICHHENNS_NS
    @MANS VARCHAR(10)
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    SET NOCOUNT ON;

    SELECT
        LH.SOTT,
        LR.MACA,
        LR.NGAY,
        C.GIOBATDAU,
        C.GIOKETTHUC,
        KH.SODT AS SDT_KHACH,
        KH.HOTEN AS TEN_KHACH,
        LH.LYDOKHAM
    FROM
        LICHHEN LH
        JOIN
        LICHRANH LR ON LH.MANS = LR.MANS AND LH.SOTT = LR.SOTT
        JOIN
        CA C ON LR.MACA = C.MACA
        JOIN
        KHACHHANG KH ON LH.SODT = KH.SODT
    WHERE 
        LH.MANS = @MANS
        AND LR.NGAY BETWEEN GETDATE() AND DATEADD(DAY, 30, GETDATE());
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- NS03/ TRUY VẤN CÁC LỊCH RẢNH CỦA MÌNH MÀ CHƯA ĐƯỢC ĐẶT LỊCH (TỪ NGÀY HIỆN TẠI ĐẾN 30 NGÀY SAU)
CREATE PROCEDURE SP_LICHRANHCHUADUOCDAT_NS
    @MANS VARCHAR(10)
AS
BEGIN TRAN 
BEGIN TRY 
BEGIN
    SET NOCOUNT ON;

    SELECT
        LR.MANS,
        LR.SOTT,
        LR.MACA,
        LR.NGAY,
        C.GIOBATDAU,
        C.GIOKETTHUC
    FROM
        LICHRANH LR
        JOIN
        CA C ON LR.MACA = C.MACA
    WHERE 
        LR.MANS = @MANS
        AND NOT EXISTS (
            SELECT 1
        FROM LICHHEN LHEN
        WHERE LHEN.MANS = LR.MANS AND LHEN.SOTT = LR.SOTT
        )
        AND LR.NGAY BETWEEN GETDATE() AND DATEADD(DAY, 30, GETDATE());
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
GO
-- NS04/ ĐĂNG KÝ LỊCH RẢNH
CREATE OR ALTER PROCEDURE SP_DANGKYLR_NS
    @MANS VARCHAR(10),
    @MACA VARCHAR(10),
    @NGAY DATE
AS
BEGIN TRAN
BEGIN TRY 
    SET NOCOUNT ON;
    IF @NGAY IS NULL
    BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Ngày đăng ký không thể null.',16,1);
        RETURN
    END
	IF (@NGAY < GETDATE())
	BEGIN
		ROLLBACK TRAN
        RAISERROR(N'Ngày đăng ký không thể nhỏ hơn ngày hiện tại.',16,1);
        RETURN
	END
	-- Mỗi ca trong ngày chỉ được tối đa 2 nha sĩ được đăng ký. 
	IF(EXISTS(SELECT MACA, NGAY
			  FROM LICHRANH
		      WHERE NGAY = @NGAY AND MACA = @MACA
			  GROUP BY MACA, NGAY
			  HAVING COUNT(MANS) > 1))
	BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Lỗi: ca đã đủ 2 người đăng ký.',16,1);
        RETURN
    END

	ELSE
	BEGIN
		DECLARE @NextSOTT INT;
		SELECT @NextSOTT = ISNULL(MAX(SOTT), 0) + 1
		FROM LICHRANH
		WHERE MANS = @MANS;

		INSERT INTO LICHRANH(MANS, MACA, NGAY, SOTT)
		VALUES(@MANS, @MACA, @NGAY, @NextSOTT);
	END
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- NS05/ HỦY LỊCH RẢNH
CREATE PROCEDURE SP_HUYLR_NS
    @MANS VARCHAR(10),
    @SOTT INT
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    SET NOCOUNT ON;
    IF NOT EXISTS (
        SELECT MANS, SOTT
        FROM LICHHEN
        WHERE MANS = @MANS AND SOTT = @SOTT
    )
    BEGIN
        DELETE FROM LICHRANH
        WHERE MANS = @MANS
            AND SOTT = @SOTT;
    END
    ELSE
    BEGIN
        ROLLBACK TRAN
        RAISERROR('Lịch rảnh đã được hẹn, không thể hủy.',16,1);
        RETURN
    END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO

-- NS07/ TẠO BỆNH ÁN MỚI
CREATE PROCEDURE SP_TAOBENHAN_NS
    @SoDienThoai VARCHAR(10),
    @NgayKham DATE,
    @MaNS VARCHAR(10),
    @DanDo NVARCHAR(500)
AS
BEGIN TRAN      
BEGIN TRY
BEGIN
    IF @NgayKham IS NULL
    BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Ngày không thể null.',16,1);
        RETURN
    END
    DECLARE @Sott INT;
    SELECT @Sott = ISNULL(MAX(SOTT), 0) + 1
    FROM HOSOBENH
    WHERE SODT = @SoDienThoai;
    INSERT INTO HOSOBENH
        (SODT, SOTT, NGAYKHAM, MANS, DANDO)
    VALUES
        (@SoDienThoai, @Sott, @NgayKham, @MaNS, @DanDo);

END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- NS08/ THÊM CTDV VÀO BỆNH ÁN
CREATE PROCEDURE SP_THEMCTDV_NS
    @MaDV VARCHAR(10),
    @SOTT INT,
    @SoDienThoai VARCHAR(10),
    @SoLuongDV INT

AS
BEGIN TRAN 
BEGIN TRY
BEGIN
     IF @SoLuongDV IS NULL
    BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Số lượng dịch vụ không thể null.',16,1);
        RETURN
    END

    DECLARE @DONGIALUCTHEM FLOAT
    SELECT @DONGIALUCTHEM = DONGIA FROM LOAIDICHVU WHERE MADV = @MaDV

    INSERT INTO CHITIETDV
        (MADV, SOTT, SODT, SOLUONG, DONGIALUCTHEM)
    VALUES
        (@MaDV, @SOTT, @SoDienThoai, @SoLuongDV, @DONGIALUCTHEM);

END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
-- NS09/ THÊM CTTHUOC VÀO BỆNH ÁN
CREATE OR ALTER PROCEDURE SP_THEMCTTHUOC_NS
    @MATHUOC VARCHAR(10),
    @SOTT INT,
    @SODT VARCHAR(10),
    @SOLUONG INT,
    @THOIDIEMDUNG NVARCHAR(200)
AS
BEGIN TRAN
BEGIN TRY
BEGIN
    IF @SOLUONG IS NULL OR @THOIDIEMDUNG IS NULL
    BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Số lượng và thời điểm dùng không thể null.',16,1);
        RETURN
    END

	IF (NOT EXISTS(SELECT * 
				   FROM HOSOBENH 
				   WHERE SOTT = @SOTT AND SODT = @SODT))
	BEGIN
        ROLLBACK TRAN
        RAISERROR(N'Không tồn tại hồ sơ bệnh.',16,1);
        RETURN
    END

	IF(NOT EXISTS(SELECT * FROM LOAITHUOC WHERE MATHUOC = @MATHUOC))
    BEGIN
        RAISERROR(N'Thuốc này không tồn tại trong kho',16,1)
        ROLLBACK TRAN
        RETURN
    END

	IF(EXISTS(SELECT SODT, SOTT, _DAXUATHOADON FROM HOSOBENH WHERE SODT = @SODT AND SOTT = @SOTT AND _DAXUATHOADON = 1))
    BEGIN
        RAISERROR(N'Lỗi: đã xuất hóa đơn, không thể thêm đơn thuốc được',16,1)
        ROLLBACK TRAN
        RETURN
    END

    ELSE 
        DECLARE @SLTON INT
        SELECT @SLTON = SLTON FROM LOAITHUOC WHERE MATHUOC = @MATHUOC
        
        DECLARE @DONGIALUCTHEM FLOAT
        SELECT @DONGIALUCTHEM = DONGIA FROM LOAITHUOC WHERE MATHUOC = @MATHUOC
		
        IF(EXISTS(SELECT *
                  FROM LOAITHUOC LT
                  WHERE LT.MATHUOC = @MATHUOC AND @SOLUONG <= @SLTON AND LT.NGAYHETHAN > GETDATE()))
        BEGIN
            INSERT INTO CHITIETTHUOC(MATHUOC,SOTT,SODT,SOLUONG,THOIDIEMDUNG, DONGIALUCTHEM)
		    VALUES(@MATHUOC, @SOTT, @SODT, @SOLUONG, @THOIDIEMDUNG, @DONGIALUCTHEM);
		    UPDATE LOAITHUOC SET SLTON = @SLTON - @SOLUONG WHERE MATHUOC = @MATHUOC;
        END
        ELSE
        BEGIN
            RAISERROR(N'Lỗi: không đủ số lượng thuốc tồn kho để bán',16,1)
            ROLLBACK TRAN
            RETURN
        END
END;
END TRY 
BEGIN CATCH 
        ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1
		RETURN
END CATCH
COMMIT TRAN
GO
---------------------------------
--NS11/ Đổi mật khẩu tài khoản nha sĩ
GO
CREATE OR ALTER PROC SP_DOIMK_NS
	@MANS VARCHAR(100),
	@MATKHAUCU VARCHAR(100),
	@MATKHAUMOI VARCHAR(100)
AS
BEGIN TRAN
	BEGIN TRY
		-- Kiểm tra tồn tại tài khoản
		IF (NOT EXISTS(SELECT * FROM NHASI WHERE MANS = @MANS))
		BEGIN
			RAISERROR(N'Không tồn tại nha sĩ này', 16, 1);
			ROLLBACK TRAN
			RETURN
		END

		IF NOT EXISTS(SELECT 1 FROM NHASI WHERE MANS = @MANS AND MATKHAU = @MATKHAUCU)
		BEGIN 
			RAISERROR(N'Xác nhận mật khẩu sai', 16, 1);
			ROLLBACK TRAN
			RETURN
		END
		ELSE
		BEGIN
			UPDATE NHASI
			SET	MATKHAU = @MATKHAUMOI
			WHERE MANS = @MANS
		END
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN;
		DECLARE @errorMessage NVARCHAR(200) = ERROR_MESSAGE();
		THROW 51000, @errorMessage, 1;
		RETURN
	END CATCH
COMMIT TRAN
GO